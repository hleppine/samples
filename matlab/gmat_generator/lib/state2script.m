function state2script( utc, ecef_state, out_file, template_name )
%STATE2SCRIPT Write time and state to GMAT out_file based on template


% Create proper date string for GMAT, example: '01 Jan 2000 11:59:28.000'
date_string = datestr(utc, 'dd mmm yyyy HH:MM:SS.FFF');


% Read in the GMAT script template
fileID = fopen(template_name);
temp = textscan(fileID, '%s', 'delimiter', '\n');
fclose(fileID);
filecontents = temp{1};


% Find indices of epoch and coordinates
searchstr_epoch = 'GMAT Aalto1.Epoch';
searchstr_x = 'GMAT Aalto1.X';
searchstr_y = 'GMAT Aalto1.Y';
searchstr_z = 'GMAT Aalto1.Z'; 
searchstr_vx = 'GMAT Aalto1.VX';
searchstr_vy = 'GMAT Aalto1.VY';
searchstr_vz = 'GMAT Aalto1.VZ';

index_epoch = find_index(filecontents, searchstr_epoch);
index_x = find_index(filecontents, searchstr_x);
index_y = find_index(filecontents, searchstr_y);
index_z = find_index(filecontents, searchstr_z);
index_vx = find_index(filecontents, searchstr_vx);
index_vy = find_index(filecontents, searchstr_vy);
index_vz = find_index(filecontents, searchstr_vz);


% Write epoch and coordinates  to cell array
filecontents{index_epoch} = sprintf('GMAT Aalto1.Epoch = ''%s'';', date_string);
filecontents{index_x} = sprintf('GMAT Aalto1.X = %f;', ecef_state(1));
filecontents{index_y} = sprintf('GMAT Aalto1.Y = %f;', ecef_state(2));
filecontents{index_z} = sprintf('GMAT Aalto1.Z = %f;', ecef_state(3));
filecontents{index_vx} = sprintf('GMAT Aalto1.VX = %f;', ecef_state(4));
filecontents{index_vy} = sprintf('GMAT Aalto1.VY = %f;', ecef_state(5));
filecontents{index_vz} = sprintf('GMAT Aalto1.VZ = %f;', ecef_state(6));


% Add generation timestamp
filecontents{2} = sprintf('%% AUTOGENERATED ON: %s', datestr(now));


% Output to script file
fileID = fopen(out_file, 'w');
formatSpec = '%s\n';
for row = 1:length(filecontents)
    fprintf(fileID,formatSpec,filecontents{row});    
end
fclose(fileID);


end


% Subfunction for finding index of a search_string in a cell array
function [index] = find_index( filecontents, search_string )
    strfind_result = strfind(filecontents, search_string);
    for n=1:length(strfind_result)
        if (strfind_result{n} == 1)
            break
        end
    end
    index = n;
end
